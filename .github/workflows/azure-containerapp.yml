name: Deploy to Azure Container Apps

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  RG: ${{ github.repository }}-rg
  LOCATION: eastus
  REGISTRY: ${{ github.repository }}-registry
  LOG_ANALYTICS: ${{ github.repository }}-logs
  CONTAINERAPPS_ENVIRONMENT: ${{ github.repository }}-env
  CONTAINERAPPS_NAME: ${{ github.repository }}-app

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Azure Login üîê
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Resource Group üì¶
      run: |
        az group create --name ${{ env.RG }} --location ${{ env.LOCATION }}

    - name: Create Azure Container Registry üè≠
      run: |
        az acr create --name ${{ env.REGISTRY }} \
          --resource-group ${{ env.RG }} \
          --sku Basic \
          --admin-enabled true

    - name: Create Log Analytics Workspace üìä
      run: |
        az monitor log-analytics workspace create \
          --resource-group ${{ env.RG }} \
          --workspace-name ${{ env.LOG_ANALYTICS }}

    - name: Get Log Analytics Details üîç
      id: la
      run: |
        echo "client_id=$(az monitor log-analytics workspace show --query customerId -g ${{ env.RG }} -n ${{ env.LOG_ANALYTICS }} --out tsv)" >> $GITHUB_OUTPUT
        echo "client_secret=$(az monitor log-analytics workspace get-shared-keys --query primarySharedKey -g ${{ env.RG }} -n ${{ env.LOG_ANALYTICS }} --out tsv)" >> $GITHUB_OUTPUT

    - name: Create Container Apps Environment üåê
      run: |
        az containerapp env create \
          --name ${{ env.CONTAINERAPPS_ENVIRONMENT }} \
          --resource-group ${{ env.RG }} \
          --location ${{ env.LOCATION }} \
          --logs-workspace-id ${{ steps.la.outputs.client_id }} \
          --logs-workspace-key ${{ steps.la.outputs.client_secret }}

    - name: Deploy Container App üö¢
      run: |
        az containerapp compose create \
          --name ${{ env.CONTAINERAPPS_NAME }} \
          --resource-group ${{ env.RG }} \
          --environment ${{ env.CONTAINERAPPS_ENVIRONMENT }} \
          --file compose.yml \
          --registry-server "${{ env.REGISTRY }}.azurecr.io" \
          --registry-username $(az acr credential show -n ${{ env.REGISTRY }} --query username -o tsv) \
          --registry-password $(az acr credential show -n ${{ env.REGISTRY }} --query "passwords[0].value" -o tsv)